<!DOCTYPE html>
<meta charset="utf-8">
<meta name="viewport" content="width=device-width, maximum-scale=1.0, minimum-scale=1.0">
<title>Caleb Branson</title>
<link rel="stylesheet" href="css/cabe.css">
<link rel="icon" type="image/png" href="favi.png">
<header>
    <h1>Caleb Branson is a designer &amp; developer in Portland, OR</h1>
</header>
<section id="portfolio">
    <h2>presence:</h2>
        <p>Currently at WebMD in Portland.
        <ul>
            <li><a href="http://twitter.com/cabebr">@cabebr</a>
            <li><a href="http://github.com/cabebr">github/cabebr</a>
            <li><a href="http://codepen.io/cabebr">codepen</a>
            <li><a href="http://linkedin.com/calebbranson">linkedin</a>
            <!-- <li>r&eacute;sum&eacute; (<a>pdf</a> or <a>md</a>) -->
            <li><a href="mailto:caleb.branson@gmail.com">or just email me</a>
        </ul>
    <h2>select projects</h2>
    <figure>
        <figcaption>
            <h3>Copy Copy Paste</h3>
            <p>Digital collage / typography experiment. Various magazines and books were cut up, scanned, and pasted back together in Photoshop to convey mixed messages.</p>
        </figcaption>
        <a class="prev-img">&larr;</a><a class="next-img">&rarr;</a>
        <img src="images/lazy.gif" data-src="images/col1.jpg" alt='Copy Copy Paste' class="lazy active">
        <img src="images/lazy.gif" data-src="images/col2.jpg" alt='Copy Copy Paste' class="lazy">
        <img src="images/lazy.gif" data-src="images/col3.jpg" alt='Copy Copy Paste' class="lazy">
        <img src="images/lazy.gif" data-src="images/col4.jpg" alt='Copy Copy Paste' class="lazy">
        <img src="images/lazy.gif" data-src="images/col5.jpg" alt='Copy Copy Paste' class="lazy">
        <img src="images/lazy.gif" data-src="images/col6.jpg" alt='Copy Copy Paste' class="lazy">
    </figure>

    <figure>
        <figcaption>
            <h3>Things</h3>
            <p>Poster series. Text was taken from a series of children's science books (authored by Isaac Asimov). Chunks of paragraphs were removed to give passages an alternate meaning, leaving questions unanswered and vandalizing the original message.</p>
        </figcaption>
        <a class="prev-img">&larr;</a><a class="next-img">&rarr;</a>
        <img src="images/lazy.gif" data-src="images/sci1.jpg" alt='Things' class="lazy active">
        <img src="images/lazy.gif" data-src="images/sci2.jpg" alt='Things' class="lazy">
        <img src="images/lazy.gif" data-src="images/sci3.jpg" alt='Things' class="lazy">
    </figure>


    <figure>
        <figcaption>
            <h3>Glitch</h3>
            <p>Image manipulation. High resolution images were imported into Photoshop, split into 3 channels (CMY), and exported to RAW format. The RAW files were imported into an audio manipulation program and cut, overlayed with digital effects, and tortured. The files were then spliced together with what remained of the original data in Photoshop.</p>
        </figcaption>
        <a class="prev-img">&larr;</a><a class="next-img">&rarr;</a>
        <img src="images/lazy.gif" data-src="images/glitch1.jpg" alt='Glitch' class="lazy">
        <img src="images/lazy.gif" data-src="images/glitch2.jpg" alt='Glitch' class="lazy">
        <img src="images/lazy.gif" data-src="images/glitch3.jpg" alt='Glitch' class="lazy">
        <img src="images/lazy.gif" data-src="images/glitch4.jpg" alt='Glitch' class="lazy active">
        <img src="images/lazy.gif" data-src="images/glitch5.jpg" alt='Glitch' class="lazy">
    </figure>
</section>

<script src="js/jquery-2.0.0.min.js"></script>
<script>
/* lazyload.js (c) Lorenzo Giuliani
 * MIT License (http://www.opensource.org/licenses/mit-license.html)
 *
 * expects a list of:  
 * `<img src="blank.gif" data-src="my_image.png" width="600" height="400" class="lazy">`
 */
 
!function(window){
  var $q = function(q, res){
        if (document.querySelectorAll) {
          res = document.querySelectorAll(q);
        } else {
          var d=document
            , a=d.styleSheets[0] || d.createStyleSheet();
          a.addRule(q,'f:b');
          for(var l=d.all,b=0,c=[],f=l.length;b<f;b++)
            l[b].currentStyle.f && c.push(l[b]);
 
          a.removeRule(0);
          res = c;
        }
        return res;
      }
    , addEventListener = function(evt, fn){
        window.addEventListener
          ? this.addEventListener(evt, fn, false)
          : (window.attachEvent)
            ? this.attachEvent('on' + evt, fn)
            : this['on' + evt] = fn;
      }
    , _has = function(obj, key) {
        return Object.prototype.hasOwnProperty.call(obj, key);
      }
    ;
 
  function loadImage (el, fn) {
    var img = new Image()
      , src = el.getAttribute('data-src');
    img.onload = function() {
      if (!! el.parent)
        el.parent.replaceChild(img, el)
      else
        el.src = src;
 
      fn? fn() : null;
    }
    img.src = src;
  }
 
  function elementInViewport(el) {
    var rect = el.getBoundingClientRect()
 
    return (
       rect.top    >= 0
    && rect.left   >= 0
    && rect.top <= (window.innerHeight || document.documentElement.clientHeight)
    )
  }
 
    var images = new Array()
      , query = $q('img.lazy')
      , processScroll = function(){
          for (var i = 0; i < images.length; i++) {
            if (elementInViewport(images[i])) {
              loadImage(images[i], function () {
                images.splice(i, i);
              });
            }
          };
        }
      ;
    // Array.prototype.slice.call is not callable under our lovely IE8 
    for (var i = 0; i < query.length; i++) {
      images.push(query[i]);
    };
 
    processScroll();
    addEventListener('scroll',processScroll);
 
}(this);
</script>
<script>$(function(){$(".next-img").click(function(){if($(this).parent().find("img.active").is("img:last-child")){$(this).parent().find("img.active").removeClass("active").parent().find("img").first().addClass("active");$(this).trigger("scroll")}else{$(this).parent().find("img.active").removeClass("active").next("img").addClass("active");$(this).trigger("scroll")}});$(".prev-img").click(function(){if($(this).parent().find("img").first().hasClass("active")){$(this).parent().find("img.active").removeClass("active").parent().find("img").last().addClass("active");$(this).trigger("scroll")}else{$(this).parent().find("img.active").removeClass("active").prev("img").addClass("active");$(this).trigger("scroll")}});$("img","figure").each(function(){$(this).load(function(){var b=$(this).width();var a=$(this).height();$(this).parent().css("min-height",a)})})});</script>
